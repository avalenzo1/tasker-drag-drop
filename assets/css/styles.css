:root {
  --color-primary-rgb: 255, 244, 214;
  --color-primary: rgb(var(--color-primary-rgb));
  
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'SF Pro Display', sans-serif;
}

.wrapper {
  display: flex;
  justify-content: space-around;
  height: 100vh;
}

.navbar {
  display: flex;
  flex-direction: column;
  padding: 0.5rem;
  gap: 0.5rem;
}

.navbar .navbar-item {
  margin-bottom: -1px;
}

.task-list-container {
  display: flex;
  justify-content: center;
  padding: 0.5rem;
  flex: 1;
  flex-direction: column;
}

.task-list-title {
  margin: 1rem auto;
  font-size: x-large;
  font-weight: bold;
  color: #605e5e;
}

.task-list {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0.5rem;
  gap: 0.5rem;
  flex-direction: column;
  flex: 1;
  border: 1px dashed;
  border-radius: 0.5rem;
  overflow: auto;
}

.task-list__item {
  position: relative;
  display: flex;
}

.task-list__item .task-list__textarea-container {
  position: relative;
  flex: 1;
}

.task-list__item .task-list__textarea {
  background-color: var(--color-primary);
  border: none;
  display: block;
  min-width: 100%;
  min-height: 100%;
  flex: 1;
}

.task-list__nav {
  position: absolute;
  bottom: 0;
  right: 0;
  opacity: 0;
  transition: opacity 50ms;
}

.task-list__textarea-container:hover .task-list__nav {
  opacity: 1;
}

.form-group {
  padding: 0.5rem 0;
}

.form-control {
  position: relative;
  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);
}

.form-control:focus {
  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), 0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);
  outline: 0;
  z-index: 999;
}

.btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 6px 14px;
  font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
  border-radius: 6px;
  color: #3D3D3D;
  background: var(--color-primary);
  border: none;
  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  justify-content: center;
  z-index: 99;
}

.btn:focus {
  box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1), 0px 0px 0px 3.5px rgba(58, 108, 217, 0.5) !important;
  outline: 0;
}

.btn--small {
  padding: 6px;
}

.btn-group .btn {
  border-radius: 0;
}

.btn-group .btn:first-child {
  border-bottom-left-radius: 0.5rem;
  border-top-left-radius: 0.5rem;
}

.btn-group .btn:last-child {
  border-bottom-right-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.btn:disabled {
    color: #bfbfbf;
    background-color: #eeec;
    cursor: not-allowed;
}

/*   Closed state of the dialog   */
dialog {
  display: none;
  flex-direction: column;
  gap: 0.5rem;
  border-radius: 0.5rem;
  border: none;
  width: 500px;
  opacity: 0;
  transition:
    opacity 0.5s,
    transform 0.3s,
    overlay 0.3s ease-out allow-discrete,
    display 0.3s ease-out allow-discrete;
  
  
}

/*   Open state of the dialog  */
dialog[open] {
  display: flex;
  opacity: 1;
  transform: translate(0, 0%);
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: translate(0, -100%);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}


@media only screen and (max-width: 820px) {
  .wrapper {
    flex-direction: column;
  }

  .navbar {
    flex-direction: row;
  }

  .btn {
     padding: 1rem;
  }
}
